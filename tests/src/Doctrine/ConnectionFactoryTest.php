<?php

namespace Fabiang\Common\SwitchDatabase\Doctrine;

use PHPUnit\Framework\TestCase;
use Interop\Container\ContainerInterface;
use Doctrine\DBAL\Driver\PDOSqlite\Driver;
use Doctrine\DBAL\Driver\Connection;
use Prophecy\PhpUnit\ProphecyTrait;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-12-09 at 13:32:57.
 *
 * @coversDefaultClass Fabiang\Common\SwitchDatabase\Doctrine\ConnectionFactory
 */
final class ConnectionFactoryTest extends TestCase
{

    use ProphecyTrait;

    /**
     * @var ConnectionFactory
     */
    private $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new ConnectionFactory;
    }

    /**
     * @covers ::__construct
     * @covers ::__invoke
     */
    public function test_Invoke()
    {
        $this->assertNull($this->object->getName());

        $container = $this->prophesize(ContainerInterface::class);

        $container->get('Configuration')->willReturn([
            'doctrine' => [
                'connection' => [
                    'orm_test' => [
                        'driverClass' => Driver::class,
                    ]
                ]
            ]
        ]);

        $container->get('doctrine.configuration.orm_default')->willReturn(null);
        $container->get('doctrine.eventmanager.orm_default')->willReturn(null);

        $return = $this->object->__invoke($container->reveal(), 'doctrine.connection.orm_test');
        $this->assertInstanceOf(Connection::class, $return);
    }

}
